# PlanetPlant Production Stack Template for Portainer
# Complete IoT plant monitoring system for production deployment

version: '3.8'

services:
  # InfluxDB Time Series Database
  influxdb:
    image: influxdb:2.7-alpine
    container_name: planetplant-influxdb
    restart: unless-stopped
    labels:
      - "com.centurylinklabs.watchtower.enable=false"
      - "com.centurylinklabs.watchtower.scope=planetplant"
    ports:
      - '8086:8086'
    environment:
      - INFLUX_INIT_ORG=${INFLUXDB_ORG:-planetplant}
      - INFLUX_INIT_BUCKET=${INFLUXDB_BUCKET:-sensor-data}
      - INFLUX_INIT_RETENTION=${INFLUXDB_RETENTION:-90d}
      - INFLUX_INIT_ADMIN_TOKEN=${INFLUXDB_TOKEN:-plantplant-super-secret-auth-token}
    volumes:
      - ./data/influxdb:/var/lib/influxdb2
    networks:
      - planetplant-network
    healthcheck:
      test: ['CMD', 'curl', '-f', 'http://localhost:8086/ping']
      interval: 30s
      timeout: 10s
      retries: 5
      start_period: 60s
    deploy:
      resources:
        limits:
          memory: 2G
          cpus: '2.0'
        reservations:
          memory: 1G
          cpus: '1.0'

  # Mosquitto MQTT Broker
  mosquitto:
    image: eclipse-mosquitto:2.0.18-openssl
    container_name: planetplant-mosquitto
    restart: unless-stopped
    labels:
      - "com.centurylinklabs.watchtower.enable=false"
      - "com.centurylinklabs.watchtower.scope=planetplant"
    ports:
      - '1883:1883'
      - '9001:9001'
    volumes:
      - ./config/mosquitto:/mosquitto/config
      - ./data/mosquitto:/mosquitto/data
      - ./logs/mosquitto:/mosquitto/log
    networks:
      - planetplant-network
    healthcheck:
      test: ['CMD-SHELL', "mosquitto_pub -h localhost -t test -m 'health check' || exit 1"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 10s

  # Redis Cache and Session Store
  redis:
    image: redis:7.2.5-alpine
    container_name: planetplant-redis
    restart: unless-stopped
    labels:
      - "com.centurylinklabs.watchtower.enable=false"
      - "com.centurylinklabs.watchtower.scope=planetplant"
    ports:
      - '6379:6379'
    command: redis-server --appendonly yes --requirepass ${REDIS_PASSWORD:-plantplant123}
    volumes:
      - ./data/redis:/data
    networks:
      - planetplant-network
    healthcheck:
      test: ['CMD', 'redis-cli', '--raw', 'incr', 'ping']
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 10s

  # Backend Node.js Server
  backend:
    image: ${REGISTRY_PREFIX:-ghcr.io/philksr/planetplant}/backend:${IMAGE_TAG:-latest}
    container_name: planetplant-backend
    restart: unless-stopped
    labels:
      - "com.centurylinklabs.watchtower.enable=true"
      - "com.centurylinklabs.watchtower.scope=planetplant"
      - "com.centurylinklabs.watchtower.stop-signal=SIGTERM"
      - "com.centurylinklabs.watchtower.lifecycle.pre-update=/scripts/backup-service.sh backend"
    ports:
      - '3001:3000'
    environment:
      - NODE_ENV=${NODE_ENV:-production}
      - PORT=${PORT:-3000}
      - HOST=${HOST:-0.0.0.0}
      - LOG_LEVEL=${LOG_LEVEL:-info}
      - LOG_DIR=/app/logs
      - BACKEND_FILE_LOGGING=true
      - BACKEND_CONSOLE_LOGGING=true
      - INFLUXDB_URL=http://influxdb:8086
      - INFLUXDB_TOKEN=${INFLUXDB_TOKEN:-plantplant-super-secret-auth-token}
      - INFLUXDB_ORG=${INFLUXDB_ORG:-planetplant}
      - INFLUXDB_BUCKET=${INFLUXDB_BUCKET:-sensor-data}
      - MQTT_HOST=${MQTT_HOST:-mosquitto}
      - MQTT_PORT=${MQTT_PORT:-1883}
      - MQTT_CLIENT_ID=${MQTT_CLIENT_ID:-planetplant-server}
      - REDIS_HOST=${REDIS_HOST:-redis}
      - REDIS_PORT=${REDIS_PORT:-6379}
      - REDIS_PASSWORD=${REDIS_PASSWORD:-plantplant123}
      - JWT_SECRET=${JWT_SECRET:-your-super-secret-jwt-key-change-this-in-production}
      - CORS_ORIGINS=${CORS_ORIGINS:-http://localhost,http://localhost:3001,http://localhost:5173}
      - MOISTURE_THRESHOLD=${MOISTURE_THRESHOLD:-30}
      - WATERING_DURATION=${WATERING_DURATION:-5000}
      - MAX_WATERING_PER_DAY=${MAX_WATERING_PER_DAY:-3}
    volumes:
      - ./logs/backend:/app/logs
      - /etc/localtime:/etc/localtime:ro
    command: ["/bin/sh", "-c", "mkdir -p ${LOG_DIR:-/app/logs} && chown -R 1001:1001 ${LOG_DIR:-/app/logs} || true; exec node src/app.js"]
    networks:
      - planetplant-network
    depends_on:
      - influxdb
      - mosquitto
      - redis
    healthcheck:
      test: ['CMD', 'curl', '-f', 'http://localhost:3000/api/system/status']
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 30s

  # Frontend React PWA
  frontend:
    image: ${REGISTRY_PREFIX:-ghcr.io/philksr/planetplant}/frontend:${IMAGE_TAG:-latest}
    container_name: planetplant-frontend
    restart: unless-stopped
    labels:
      - "com.centurylinklabs.watchtower.enable=true"
      - "com.centurylinklabs.watchtower.scope=planetplant"
      - "com.centurylinklabs.watchtower.stop-signal=SIGTERM"
    expose:
      - '80'
    networks:
      - planetplant-network
    healthcheck:
      test: ['CMD', 'curl', '-f', 'http://localhost/health']
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 10s

  # Nginx Reverse Proxy
  nginx-proxy:
    image: ${REGISTRY_PREFIX:-ghcr.io/philksr/planetplant}/nginx-proxy:${IMAGE_TAG:-latest}
    container_name: planetplant-nginx
    restart: unless-stopped
    labels:
      - "com.centurylinklabs.watchtower.enable=true"
      - "com.centurylinklabs.watchtower.scope=planetplant"
      - "com.centurylinklabs.watchtower.stop-signal=SIGTERM"
    ports:
      - '80:80'
      - '443:443'
    volumes:
      - /etc/localtime:/etc/localtime:ro
    networks:
      - planetplant-network
    depends_on:
      - backend
      - frontend
    healthcheck:
      test: ['CMD', 'curl', '-f', 'http://localhost/health']
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 10s

  # Optional: Grafana for Monitoring
  grafana:
    image: grafana/grafana-oss:10.2.0
    container_name: planetplant-grafana
    restart: unless-stopped
    labels:
      - "com.centurylinklabs.watchtower.enable=true"
      - "com.centurylinklabs.watchtower.scope=planetplant"
      - "com.centurylinklabs.watchtower.stop-signal=SIGTERM"
    ports:
      - '3001:3000'
    environment:
      - GF_SECURITY_ADMIN_USER=${GRAFANA_ADMIN_USER:-admin}
      - GF_SECURITY_ADMIN_PASSWORD=${GRAFANA_ADMIN_PASSWORD:-plantplant123}
      - GF_USERS_ALLOW_SIGN_UP=false
    volumes:
      - ./data/grafana:/var/lib/grafana
      - ./config/grafana/provisioning:/etc/grafana/provisioning
      - /etc/localtime:/etc/localtime:ro
    networks:
      - planetplant-network
    depends_on:
      - influxdb
    profiles:
      - monitoring
    healthcheck:
      test: ['CMD-SHELL', 'curl -f http://localhost:3000/api/health || exit 1']
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 30s

networks:
  planetplant-network:
    driver: bridge
    ipam:
      config:
        - subnet: 172.25.0.0/16